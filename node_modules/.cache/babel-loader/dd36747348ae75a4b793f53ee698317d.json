{"ast":null,"code":"var _jsxFileName = \"/Users/amit/MBTA/src/components/Table/ui.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\nimport { Table } from \"react-bootstrap\";\nimport { ErrorMessage } from \"../ErrorMessage/container\";\nexport class TableUI extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.formatTime = dateStr => {\n      return new Intl.DateTimeFormat(\"en-US\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }).format(new Date(dateStr));\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          headers = _this$props.headers,\n          departures = _this$props.departures,\n          errorMessage = _this$props.errorMessage;\n\n    if (errorMessage === null && departures === null) {\n      return React.createElement(\"p\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    if (errorMessage !== null) {\n      return React.createElement(ErrorMessage, {\n        errorMessage: errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Table, {\n      striped: true,\n      responsive: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, headers.map(h => React.createElement(\"th\", {\n      key: h,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, h)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, departures && departures.map((d, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, d.carrier), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.formatTime(d.departureTime)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, d.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, d.vehicle), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, d.track), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, d.status)))));\n  }\n\n}\nTableUI.propTypes = {\n  headers: PropTypes.array,\n  departures: PropTypes.array,\n  errorMessage: PropTypes.string\n};","map":{"version":3,"sources":["/Users/amit/MBTA/src/components/Table/ui.js"],"names":["React","PropTypes","Table","ErrorMessage","TableUI","Component","formatTime","dateStr","Intl","DateTimeFormat","hour","minute","format","Date","render","props","headers","departures","errorMessage","map","h","d","index","carrier","departureTime","name","vehicle","track","status","propTypes","array","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,OAAO,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAa3CC,UAb2C,GAa7BC,OAAD,IAAa;AACxB,aAAO,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AACtCC,QAAAA,IAAI,EAAE,SADgC;AAEtCC,QAAAA,MAAM,EAAE;AAF8B,OAAjC,EAGJC,MAHI,CAGG,IAAIC,IAAJ,CAASN,OAAT,CAHH,CAAP;AAID,KAlB0C;AAAA;;AAoB3CO,EAAAA,MAAM,GAAG;AAAA,wBACuC,KAAKC,KAD5C;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,UADV,eACUA,UADV;AAAA,UACsBC,YADtB,eACsBA,YADtB;;AAEP,QAAIA,YAAY,KAAK,IAAjB,IAAyBD,UAAU,KAAK,IAA5C,EAAkD;AAChD,aAAO;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,QAAIC,YAAY,KAAK,IAArB,EAA2B;AACzB,aAAO,oBAAC,YAAD;AAAc,QAAA,YAAY,EAAEA,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,UAAU,MAAzB;AAA0B,MAAA,OAAO,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OAAO,CAACG,GAAR,CAAaC,CAAD,IACX;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaA,CAAb,CADD,CADH,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,UAAU,IACTA,UAAU,CAACE,GAAX,CAAe,CAACE,CAAD,EAAIC,KAAJ,KACb;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,CAAC,CAACE,OAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKjB,UAAL,CAAgBe,CAAC,CAACG,aAAlB,CAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,CAAC,CAACI,IAAP,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,CAAC,CAACK,OAAP,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,CAAC,CAACM,KAAP,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,CAAC,CAACO,MAAP,CANF,CADF,CAFJ,CARF,CADF;AAwBD;;AApD0C;AAAhCxB,O,CACJyB,S,GAAY;AACjBb,EAAAA,OAAO,EAAEf,SAAS,CAAC6B,KADF;AAEjBb,EAAAA,UAAU,EAAEhB,SAAS,CAAC6B,KAFL;AAGjBZ,EAAAA,YAAY,EAAEjB,SAAS,CAAC8B;AAHP,C","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./styles.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { ErrorMessage } from \"../ErrorMessage/container\";\r\n\r\nexport class TableUI extends React.Component {\r\n  static propTypes = {\r\n    headers: PropTypes.array,\r\n    departures: PropTypes.array,\r\n    errorMessage: PropTypes.string,\r\n  };\r\n\r\n  /*constructor(props) {\r\n    super(props);\r\n    this.formatTime = this.formatTime.bind(this);\r\n  }\r\n  */\r\n\r\n  formatTime = (dateStr) => {\r\n    return new Intl.DateTimeFormat(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    }).format(new Date(dateStr));\r\n  };\r\n\r\n  render() {\r\n    const { headers, departures, errorMessage } = this.props;\r\n    if (errorMessage === null && departures === null) {\r\n      return <p className=\"loading\">Loading...</p>;\r\n    }\r\n    if (errorMessage !== null) {\r\n      return <ErrorMessage errorMessage={errorMessage} />;\r\n    }\r\n    return (\r\n      <Table striped responsive variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            {headers.map((h) => (\r\n              <th key={h}>{h}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {departures &&\r\n            departures.map((d, index) => (\r\n              <tr key={index}>\r\n                <td>{d.carrier}</td>\r\n                <td>{this.formatTime(d.departureTime)}</td>\r\n                <td>{d.name}</td>\r\n                <td>{d.vehicle}</td>\r\n                <td>{d.track}</td>\r\n                <td>{d.status}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}