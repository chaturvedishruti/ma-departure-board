{"ast":null,"code":"var _jsxFileName = \"/Users/amit/MBTA/src/components/Table/ui.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nimport { Table } from 'react-bootstrap';\nimport { ErrorMessage } from '../ErrorMessage/container';\nexport class TableUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatTime = this.formatTime.bind(this);\n  }\n\n  formatTime(dateStr) {\n    return new Intl.DateTimeFormat(\"en-US\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    }).format(new Date(dateStr));\n  }\n\n  render() {\n    const _this$props = this.props,\n          headers = _this$props.headers,\n          departures = _this$props.departures,\n          errorMessage = _this$props.errorMessage;\n\n    if (errorMessage === null && departures === null) {\n      return React.createElement(\"p\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    if (errorMessage !== null) {\n      return React.createElement(ErrorMessage, {\n        errorMessage: errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Table, {\n      striped: true,\n      responsive: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, headers.map(h => React.createElement(\"th\", {\n      key: h,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, h)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, departures && departures.map((d, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.formatTime(d.departureTime)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, d.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, d.vehicle), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, d.track), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, d.status)))));\n  }\n\n}\nTableUI.propTypes = {\n  headers: PropTypes.array,\n  departures: PropTypes.array,\n  errorMessage: PropTypes.string\n};","map":{"version":3,"sources":["/Users/amit/MBTA/src/components/Table/ui.js"],"names":["React","PropTypes","Table","ErrorMessage","TableUI","Component","constructor","props","formatTime","bind","dateStr","Intl","DateTimeFormat","hour","minute","format","Date","render","headers","departures","errorMessage","map","h","d","index","departureTime","name","vehicle","track","status","propTypes","array","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AAGA,OAAO,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAQ3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAGDD,EAAAA,UAAU,CAACE,OAAD,EAAS;AACjB,WAAO,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AACtCC,MAAAA,IAAI,EAAE,SADgC;AAEtCC,MAAAA,MAAM,EAAE;AAF8B,KAAjC,EAGJC,MAHI,CAGG,IAAIC,IAAJ,CAASN,OAAT,CAHH,CAAP;AAID;;AAGDO,EAAAA,MAAM,GAAG;AAAA,wBACqC,KAAKV,KAD1C;AAAA,UACAW,OADA,eACAA,OADA;AAAA,UACSC,UADT,eACSA,UADT;AAAA,UACqBC,YADrB,eACqBA,YADrB;;AAEP,QAAGA,YAAY,KAAK,IAAjB,IAAyBD,UAAU,KAAK,IAA3C,EAAgD;AAC9C,aACE;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD;;AACD,QAAGC,YAAY,KAAK,IAApB,EAAyB;AACvB,aAAO,oBAAC,YAAD;AAAc,QAAA,YAAY,EAAEA,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,UAAU,MAAzB;AAA0B,MAAA,OAAO,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OAAO,CAACG,GAAR,CAAYC,CAAC,IACZ;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaA,CAAb,CADD,CADH,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,UAAU,IAAIA,UAAU,CAACE,GAAX,CAAe,CAACE,CAAD,EAAIC,KAAJ,KAC5B;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKhB,UAAL,CAAgBe,CAAC,CAACE,aAAlB,CAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,CAAC,CAACG,IAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,CAAC,CAACI,OAAP,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,CAAC,CAACK,KAAP,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,CAAC,CAACM,MAAP,CALF,CADa,CADjB,CARF,CADF;AAsBD;;AAtD0C;AAAhCzB,O,CAEJ0B,S,GAAY;AACfZ,EAAAA,OAAO,EAAEjB,SAAS,CAAC8B,KADJ;AAEfZ,EAAAA,UAAU,EAAElB,SAAS,CAAC8B,KAFP;AAGfX,EAAAA,YAAY,EAAEnB,SAAS,CAAC+B;AAHT,C","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.css';\r\nimport { Table } from 'react-bootstrap';\r\nimport {ErrorMessage} from '../ErrorMessage/container';\r\n\r\n\r\nexport class TableUI extends React.Component {\r\n\r\n  static propTypes = {\r\n      headers: PropTypes.array,\r\n      departures: PropTypes.array,\r\n      errorMessage: PropTypes.string\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.formatTime = this.formatTime.bind(this);\r\n  }\r\n\r\n\r\n  formatTime(dateStr){\r\n    return new Intl.DateTimeFormat(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\"\r\n    }).format(new Date(dateStr));\r\n  }\r\n\r\n\r\n  render() {\r\n    const {headers, departures, errorMessage} = this.props;\r\n    if(errorMessage === null && departures === null){\r\n      return (\r\n        <p className=\"loading\">Loading...</p>\r\n      );\r\n    }\r\n    if(errorMessage !== null){\r\n      return <ErrorMessage errorMessage={errorMessage} />;\r\n    }\r\n    return (\r\n      <Table striped responsive variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            {headers.map(h => (\r\n              <th key={h}>{h}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {departures && departures.map((d, index) => (\r\n            <tr key={index}>\r\n              <td>{this.formatTime(d.departureTime)}</td>\r\n              <td>{d.name}</td>\r\n              <td>{d.vehicle}</td>\r\n              <td>{d.track}</td>\r\n              <td>{d.status}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}